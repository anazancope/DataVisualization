//step 1 - defining margins and radius for the svg and the pie
		var margin = {top: 20, right: 20, bottom: 20, left:100};
		var width3 = 600; //this is going to be the size of my svg
		var height3 = 250;//this is going to be the size of my svg
		var padding3 = 30;
		var innerHeight3 = height3 - margin.top - margin.bottom;
		var innerWidth3 = width3 - margin.right - margin.left;
		var widthLegenda3 = width3 - 200;
		var heightLegenda3 = 25;

		var radius = innerHeight3/2;
		
		var rowConverter = function(d) {

			return {
			name: d.What,
			percentage: parseFloat(d.percentage),
	
			};
		}
		//Load in the data
		d3.csv("percentage.csv", rowConverter).then(function(data) {
		//define a color variable using a scale
		var cor = d3.scaleOrdinal().range(["#5A176B","#3e0966","#2C61A4", "#37A42C" ,"#FD8E00", "#F0193D","#A42C6B"]);
		//creating the svg where the pie is going to appear
		var svg = d3.select(".circular")
					.append("svg")
					.attr('height', height3)
					.attr('width', width3);

		//to do a pie chart I can't use d3.pie directly 
		//I have to use arc generator and then use the pie generator 
		//the pie generator will calculate angles

		//grabbing the values I want to be represented on the pi chart and inputting the degree they are going to be displayed
		//since the oreder downt matter I didn't use the sort method that would be before value 
		/*d3.pie().sort(null)..value(function(d){return d.share;})(data);*/

		var torta = d3.pie()
					.value(function(d){return d.percentage;})(data);
	
		//now define the segments use the arc generator function
		//isso gera os arcos para cada valor do dataset
		var arcos = d3.arc()
						.innerRadius(0)
						.outerRadius(radius)
						.padAngle(.1) //padAngle*padRadius = tamanho do padding
						.padRadius(50);

		var arcosTexto = d3.arc()
						.innerRadius(radius - 25)
						.outerRadius(radius - 25);

		//this appends a g element on the middle of the svg, that references the paths created by the pie function
		//that is stored in the torta variable
		var seccao = svg.append('g')
						.attr('transform','translate ('+innerWidth3/2+","+height3/2+")")
						.attr('class', 'roda')
						.selectAll('path')
						.data(torta);

		//this appends a path with the values from torta (referenced by d), and creates the arc they will be represented
		seccao.enter()
				.append('path')  //esse path foi criado pela funçao arcos
				.attr('d', arcos)
				.attr('fill',function(d,i){//colors the arcs
					return cor(i);
				});

		//inputing the values of the shares on the pie chart
		//this select the g element and then the text elements and bind the data generated by the function torta
		var texto = d3.select('.roda').selectAll('text').data(torta);
		//this is running through the data and appending the text element 
		texto.enter()
			.append('text')
			//this defines the location of the text over the pie
			.attr('transform',function(d){
				return 'translate ('+arcosTexto.centroid(d)+')';
				})
			//this changes the centre of the circle that golds the text 
			.attr('dy', '0.35em')
			.attr('dx', '-1.05em')
			//input the text that I want in the chart
			.text(function(d){ 
				return d.data.percentage;
				})
			//color of the text
			.attr('fill', 'white');

		//creating a legend
		//locating the legend on the right side of the svg
		var legenda = svg.append('g')
						.attr('transform', 'translate ('+widthLegenda3+','+heightLegenda3+')')
						//selects all objects with class legendas and binds it with the data torta
						.selectAll('.legendas').data(torta);

		//creating the squares and setting positions
		var quadrados = legenda.enter()
								//appending a g element binded with the prior data
								.append('g')
								//creating a class for each g element
								.classed('legendas',true)
								//positioning the squares
								//x = 0 (um sobre o outro)
								//y espaçamento na vertical
								.attr('transform', function (d,i){ 
									return 'translate (0,'+(i+1)*30+')';
									});
		//appending rectangles and coloring them
		quadrados.append('rect')
					.attr('width',20)
					.attr('height',20)
					.attr('fill', function(d,i){
						return cor(i);
						});
		//grudando os quadrados com os textos para que as legendas sejam completas
		quadrados.append('text').text(function(d){
					return d.data.name;
					})
					.attr('fill', function(d,i){
						return cor(i);
					})
					.style("font-size", "15px")
					.attr('x',25)
					.attr('y', 17);


});